{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport colors from \"../config/colors\";\nimport defaultStyle from \"../config/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AppTextInput(_ref) {\n  var icon = _ref.icon,\n      otherProps = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [icon && _jsx(MaterialCommunityIcons, {\n      name: icon,\n      size: 25,\n      color: colors.medium,\n      style: styles.icon\n    }), _jsx(TextInput, _objectSpread({\n      placeholderTextColor: colors.medium,\n      style: defaultStyle.text\n    }, otherProps))]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.light,\n    borderRadius: 25,\n    flexDirection: 'row',\n    width: '100%',\n    padding: 15,\n    marginVertical: 10\n  },\n  icon: {\n    marginRight: 10\n  }\n});\nexport default AppTextInput;","map":{"version":3,"sources":["/Users/girish/MOSH-ReactNative/Exercises10/app/components/AppTextInput.js"],"names":["React","MaterialCommunityIcons","colors","defaultStyle","AppTextInput","icon","otherProps","styles","container","medium","text","StyleSheet","create","backgroundColor","light","borderRadius","flexDirection","width","padding","marginVertical","marginRight"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;;;;AAEA,SAASC,YAAT,OAA+C;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAdC,UAAc;;AAC3C,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACKH,IAAI,IAAI,KAAC,sBAAD;AAAwB,MAAA,IAAI,EAAEA,IAA9B;AAAoC,MAAA,IAAI,EAAE,EAA1C;AAA8C,MAAA,KAAK,EAAEH,MAAM,CAACO,MAA5D;AAAoE,MAAA,KAAK,EAAEF,MAAM,CAACF;AAAlF,MADb,EAEI,KAAC,SAAD;AACI,MAAA,oBAAoB,EAAEH,MAAM,CAACO,MADjC;AAEI,MAAA,KAAK,EAAEN,YAAY,CAACO;AAFxB,OAEkCJ,UAFlC,EAFJ;AAAA,IADJ;AAQH;;AACD,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,eAAe,EAAEX,MAAM,CAACY,KADjB;AAEPC,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,aAAa,EAAE,KAHR;AAIPC,IAAAA,KAAK,EAAE,MAJA;AAKPC,IAAAA,OAAO,EAAE,EALF;AAMPC,IAAAA,cAAc,EAAE;AANT,GADkB;AAS7Bd,EAAAA,IAAI,EAAE;AAEFe,IAAAA,WAAW,EAAE;AAFX;AATuB,CAAlB,CAAf;AAeA,eAAehB,YAAf","sourcesContent":["\nimport React from 'react';\nimport { TextInput, View, StyleSheet, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport colors from '../config/colors';\nimport defaultStyle from '../config/styles';\n\nfunction AppTextInput({ icon, ...otherProps }) {\n    return (\n        <View style={styles.container}>\n            {icon && <MaterialCommunityIcons name={icon} size={25} color={colors.medium} style={styles.icon} />}\n            <TextInput\n                placeholderTextColor={colors.medium}\n                style={defaultStyle.text} {...otherProps} />\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: colors.light,\n        borderRadius: 25,\n        flexDirection: 'row',\n        width: '100%',\n        padding: 15,\n        marginVertical: 10,\n    },\n    icon: {\n\n        marginRight: 10,\n\n    },\n})\nexport default AppTextInput;"]},"metadata":{},"sourceType":"module"}