{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BlurView } from \"react-native-web/dist/index\";\nimport Icon from \"./app/components/Icon\";\nimport Screen from \"./app/components/Screen\";\nimport AccountScreen from \"./app/screens/AccountScreen\";\nimport BorderViewScreen from \"./app/screens/BorderViewScreen\";\nimport CardScreen from \"./app/screens/CardScreen\";\nimport ListingDetailScreen from \"./app/screens/ListingDetailScreen\";\nimport ListingsScreen from \"./app/screens/ListingsScreen\";\nimport MessagesScreen from \"./app/screens/MessagesScreen\";\nimport ViewImageScreen from \"./app/screens/ViewImageScreen\";\nimport WelcomeScreen from \"./app/screens/WelcomeScreen\";\nimport SectionScreen from \"./app/screens/SectionScreen\";\nimport { useState, useEffect } from 'react';\nimport AppTextInput from \"./app/components/AppTextInput\";\nimport AppPicker from \"./app/components/AppPicker\";\nimport colors from \"./app/config/colors\";\nimport LoginScreen from \"./app/screens/LoginScreen\";\nimport SignUpScreen from \"./app/screens/SignUpScreen\";\nimport ListingEditScreen from \"./app/screens/ListingEditScreen\";\nimport ImagePickerScreen from \"./app/screens/ImagePickerScreen\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nimport navigationTheme from \"./app/navigation/navigationTheme\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Link = function Link() {\n  var navigation = useNavigation();\n  return _jsx(Button, {\n    title: \"Click\",\n    onPress: function onPress() {\n      return navigation.navigate('TweetDetails');\n    }\n  });\n};\n\nvar Tweets = function Tweets(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(Screen, {\n    children: [_jsx(Text, {\n      children: \"Tweets\"\n    }), _jsx(Button, {\n      title: \"View Tweet of Girish\",\n      onPress: function onPress() {\n        return navigation.navigate(\"TweetDetails\", {\n          id: 2,\n          name: 'Girish'\n        });\n      }\n    })]\n  });\n};\n\nvar TweetDetails = function TweetDetails(_ref2) {\n  var route = _ref2.route;\n  return _jsx(Screen, {\n    children: _jsxs(Text, {\n      children: [\"TweetDetails page \", route.params.id]\n    })\n  });\n};\n\nvar Account = function Account() {\n  return _jsx(Screen, {\n    children: _jsx(Text, {\n      children: \"Account\"\n    })\n  });\n};\n\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  var Tab = createBottomTabNavigator();\n\n  var TabNavigator = function TabNavigator() {\n    return _jsxs(Tab.Navigator, {\n      screenOptions: {\n        tabBarStyle: {\n          position: 'absolute'\n        },\n        tabBarActiveTintColor: 'tomato',\n        headerShown: false\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Feed\",\n        component: StackNavigator,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var size = _ref3.size,\n                color = _ref3.color;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"home\",\n              size: size,\n              color: color\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Account\",\n        component: Account,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var size = _ref4.size,\n                color = _ref4.color;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"account\",\n              size: size,\n              color: color\n            });\n          }\n        }\n      })]\n    });\n  };\n\n  var StackNavigator = function StackNavigator() {\n    return _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: 'dodgerblue'\n        },\n        headerTintColor: \"white\"\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Tweets\",\n        component: Tweets,\n        options: {}\n      }), _jsx(Stack.Screen, {\n        name: \"TweetDetails\",\n        component: TweetDetails,\n        options: function options(_ref5) {\n          var route = _ref5.route;\n          return {\n            title: route.params.name\n          };\n        }\n      })]\n    });\n  };\n\n  return _jsx(NavigationContainer, {\n    theme: navigationTheme,\n    children: _jsx(AppNavigator, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  rolldice: {\n    backgroundColor: colors.primary,\n    padding: 7,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/Users/girish/MOSH-ReactNative/Exercises10/App.js"],"names":["StatusBar","BlurView","Icon","Screen","AccountScreen","BorderViewScreen","CardScreen","ListingDetailScreen","ListingsScreen","MessagesScreen","ViewImageScreen","WelcomeScreen","SectionScreen","useState","useEffect","AppTextInput","AppPicker","colors","LoginScreen","SignUpScreen","ListingEditScreen","ImagePickerScreen","SplashScreen","createNativeStackNavigator","createBottomTabNavigator","NavigationContainer","useNavigation","MaterialCommunityIcons","AuthNavigator","navigationTheme","AppNavigator","Link","navigation","navigate","Tweets","id","name","TweetDetails","route","params","Account","App","Stack","Tab","TabNavigator","tabBarStyle","position","tabBarActiveTintColor","headerShown","StackNavigator","tabBarIcon","size","color","headerStyle","backgroundColor","headerTintColor","title","styles","StyleSheet","create","container","flex","alignItems","justifyContent","rolldice","primary","padding","borderRadius","margin"],"mappings":"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","sourcesContent":["\nimport { StatusBar } from 'expo-status-bar';\nimport { Button, StyleSheet, Switch, Text, TextInput, View, BlurView } from 'react-native';\nimport Icon from './app/components/Icon';\nimport Screen from './app/components/Screen';\n//view controller \nimport AccountScreen from './app/screens/AccountScreen';\nimport BorderViewScreen from './app/screens/BorderViewScreen';\nimport CardScreen from './app/screens/CardScreen';\nimport ListingDetailScreen from './app/screens/ListingDetailScreen';\nimport ListingsScreen from './app/screens/ListingsScreen';\nimport MessagesScreen from './app/screens/MessagesScreen';\nimport ViewImageScreen from './app/screens/ViewImageScreen';\nimport WelcomeScreen from './app/screens/WelcomeScreen';\nimport SectionScreen from './app/screens/SectionScreen';\nimport { useState, useEffect } from 'react';\nimport AppTextInput from './app/components/AppTextInput';\nimport AppPicker from './app/components/AppPicker';\nimport colors from './app/config/colors';\nimport LoginScreen from './app/screens/LoginScreen';\nimport SignUpScreen from './app/screens/SignUpScreen';\nimport ListingEditScreen from './app/screens/ListingEditScreen';\nimport ImagePickerScreen from './app/screens/ImagePickerScreen';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport AuthNavigator from './app/navigation/AuthNavigator';\nimport navigationTheme from './app/navigation/navigationTheme';\nimport AppNavigator from './app/navigation/AppNavigator';\n\n\nconst Link = () => {\n  const navigation = useNavigation();\n  return (\n    <Button title='Click' onPress={() => navigation.navigate('TweetDetails')} />\n  );\n}\nconst Tweets = ({ navigation }) => (\n  <Screen>\n    <Text>Tweets</Text>\n    {/* <Link /> */}\n    <Button title='View Tweet of Girish' onPress={() => navigation.navigate(\"TweetDetails\", { id: 2, name: 'Girish' })} />\n  </Screen>\n);\nconst TweetDetails = ({ route }) => (\n  //useRoute() hook\n  <Screen>\n    <Text>TweetDetails page {route.params.id}</Text>\n  </Screen>\n);\nconst Account = () => (\n  <Screen>\n    <Text>Account</Text>\n  </Screen>\n);\nexport default function App() {\n\n  const Stack = createNativeStackNavigator();\n  const Tab = createBottomTabNavigator();\n  const TabNavigator = () => (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarStyle: { position: 'absolute' },\n        tabBarActiveTintColor: 'tomato',\n        headerShown: false\n      }}>\n      <Tab.Screen\n        name='Feed'\n        component={StackNavigator}\n        options={{\n          tabBarIcon: ({ size, color }) => <MaterialCommunityIcons name='home' size={size} color={color} />\n        }}\n      />\n      <Tab.Screen\n        name='Account'\n        component={Account}\n        options={{\n          tabBarIcon: ({ size, color }) => <MaterialCommunityIcons name='account' size={size} color={color} />\n        }}\n      />\n    </Tab.Navigator>\n  )\n  const StackNavigator = () => (\n    //make globaly navigation \n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: 'dodgerblue' },\n        headerTintColor: \"white\",\n\n      }}\n    >\n      <Stack.Screen\n        name='Tweets'\n        component={Tweets}\n        options={{\n\n        }} />\n      <Stack.Screen\n        name='TweetDetails'\n        component={TweetDetails}\n        options={({ route }) => ({ title: route.params.name })} />\n    </Stack.Navigator>\n  )\n  return (\n    //<WelcomeScreen />\n    // <ViewImageScreen />\n    // <BorderViewScreen />\n    // <CardScreen />\n    //<ListingDetailScreen />\n    //<MessagesScreen />\n    // <AccountScreen />\n    // <ListingsScreen />\n    // <SectionScreen />\n    // </Screen>\n    // <LoginScreen />\n    // <SignUpScreen />\n    // <ListingEditScreen />\n    // <ImagePickerScreen />\n    <NavigationContainer theme={navigationTheme}>\n      {/* <StackNavigator /> */}\n      {/* <TabNavigator /> */}\n      {/* <AuthNavigator /> */}\n      <AppNavigator />\n    </NavigationContainer>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  rolldice: {\n    backgroundColor: colors.primary,\n    padding: 7,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 25,\n    margin: 10\n  }\n});\n/**\n * \n * //uri => handleAddImage(uri) for onAddImage\n *const [firstName, setFirstName] = useState('');\n  const [isNew, setIsNew] = useState(false);\n  const [appIsReady, setAppIsReady] = useState(false);\n\n\n  useEffect(() => {\n    async function prepare() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n        await new Promise(resolve => setTimeout(resolve, 2000));\n\n      } catch (error) {\n        console.warn(error)\n      } finally {\n        setAppIsReady(true)\n      }\n    }\n  }, [])\n  NAVIGATION PROP\n  initialRouteName=\"Tweets\"\n   options={{ title: 'Tweet Details' }} />\n   tabBarIcon: ({ size }) size is base on navigation size it is automatically render\n */"]},"metadata":{},"sourceType":"module"}