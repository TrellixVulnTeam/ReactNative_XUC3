{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AppForm, AppFormPicker as Picker, AppFormField as FormField, SubmitButton } from \"../components/forms\";\nimport Screen from \"../components/Screen\";\nimport * as Yup from 'yup';\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport useLocation from \"../hooks/useLocation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"Please select at least one image\")\n});\nvar categories = [{\n  label: \"Furniture\",\n  value: 1,\n  backgroundColor: '#fc5c65',\n  icon: 'floor-lamp'\n}, {\n  label: \"Cars\",\n  value: 2,\n  backgroundColor: '#fd9644',\n  icon: 'car'\n}, {\n  label: \"Cameras\",\n  value: 3,\n  backgroundColor: '#fed330',\n  icon: 'camera'\n}, {\n  label: \"Games\",\n  value: 4,\n  backgroundColor: '#26de81',\n  icon: 'cards'\n}, {\n  label: \"Clothing\",\n  value: 5,\n  backgroundColor: '#2bcbba',\n  icon: 'shoe-heel'\n}, {\n  label: \"Sports\",\n  value: 6,\n  backgroundColor: '#45aaf2',\n  icon: 'basketball'\n}, {\n  label: \"Movies & Music\",\n  value: 7,\n  backgroundColor: '#4b7bec',\n  icon: 'headphones'\n}];\n\nfunction ListingEditScreen() {\n  var location = useLocation();\n  return _jsx(Screen, {\n    style: styles.container,\n    children: _jsxs(AppForm, {\n      initialValues: {\n        title: \"\",\n        price: \"\",\n        description: \"test\",\n        category: null,\n        images: []\n      },\n      onSubmit: function onSubmit(values) {\n        return console.log(location);\n      },\n      validationSchema: validationSchema,\n      children: [_jsx(FormImagePicker, {\n        name: \"images\"\n      }), _jsx(FormField, {\n        maxLength: 255,\n        name: \"title\",\n        placeholder: \"title\"\n      }), _jsx(FormField, {\n        keyboradType: \"numeric\",\n        maxLength: 8,\n        name: \"price\",\n        placeholder: \"Price\"\n      }), _jsx(Picker, {\n        items: categories,\n        name: \"category\",\n        numberOfColumns: 3,\n        PickerItemComponent: CategoryPickerItem,\n        placeholder: \"Category\"\n      }), _jsx(FormField, {\n        maxLengt: 255,\n        multiline: true,\n        name: \"description\",\n        numberOfLines: 3,\n        placeholder: \"Description\"\n      }), _jsx(SubmitButton, {\n        title: \"Post\"\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20\n  }\n});\nexport default ListingEditScreen;","map":{"version":3,"sources":["/Users/girish/MOSH-ReactNative/Exercises10/app/screens/ListingEditScreen.js"],"names":["React","AppForm","AppFormPicker","Picker","AppFormField","FormField","SubmitButton","Screen","Yup","CategoryPickerItem","FormImagePicker","useLocation","validationSchema","object","shape","title","string","required","min","label","price","number","max","description","category","nullable","images","array","categories","value","backgroundColor","icon","ListingEditScreen","location","styles","container","values","console","log","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport {\n    AppForm,\n    AppFormPicker as Picker,\n    AppFormField as FormField,\n    SubmitButton\n} from '../components/forms';\nimport Screen from '../components/Screen';\nimport * as Yup from 'yup';\n\nimport CategoryPickerItem from '../components/CategoryPickerItem';\nimport FormImagePicker from '../components/forms/FormImagePicker';\nimport useLocation from '../hooks/useLocation';\nconst validationSchema = Yup.object().shape({\n    title: Yup.string().required().min(1).label(\"Title\"),\n    price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n    description: Yup.string().label(\"Description\"),\n    category: Yup.object().required().nullable().label(\"Category\"),\n    images: Yup.array().min(1, \"Please select at least one image\")\n})\nconst categories = [\n    { label: \"Furniture\", value: 1, backgroundColor: '#fc5c65', icon: 'floor-lamp' },\n    { label: \"Cars\", value: 2, backgroundColor: '#fd9644', icon: 'car' },\n    { label: \"Cameras\", value: 3, backgroundColor: '#fed330', icon: 'camera' },\n    { label: \"Games\", value: 4, backgroundColor: '#26de81', icon: 'cards' },\n    { label: \"Clothing\", value: 5, backgroundColor: '#2bcbba', icon: 'shoe-heel' },\n    { label: \"Sports\", value: 6, backgroundColor: '#45aaf2', icon: 'basketball' },\n    { label: \"Movies & Music\", value: 7, backgroundColor: '#4b7bec', icon: 'headphones' }\n]\nfunction ListingEditScreen() {\n\n    const location = useLocation();\n    return (\n        <Screen style={styles.container}>\n            <AppForm\n                initialValues={{\n                    title: \"\",\n                    price: \"\",\n                    description: \"test\",\n                    category: null,\n                    images: []\n                }}\n                onSubmit={(values) => console.log(location)}\n                validationSchema={validationSchema}\n            >\n                <FormImagePicker name=\"images\" />\n                <FormField maxLength={255} name=\"title\" placeholder=\"title\" />\n                <FormField\n                    keyboradType=\"numeric\"\n                    maxLength={8}\n                    name=\"price\"\n                    placeholder=\"Price\"\n                />\n                <Picker\n                    items={categories}\n                    name=\"category\"\n                    numberOfColumns={3}\n                    PickerItemComponent={CategoryPickerItem}\n                    placeholder=\"Category\"\n\n                />\n                <FormField\n                    maxLengt={255}\n                    multiline\n                    name=\"description\"\n                    numberOfLines={3}\n                    placeholder=\"Description\"\n                />\n                <SubmitButton title=\"Post\" />\n            </AppForm>\n        </Screen>\n    );\n}\nconst styles = StyleSheet.create({\n    container: {\n        padding: 20,\n    },\n})\nexport default ListingEditScreen;"]},"metadata":{},"sourceType":"module"}